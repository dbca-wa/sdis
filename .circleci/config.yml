# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:2.7.15-node-browsers
        environment:
          # Not using pipenv, but virtualenvwrapper / virtualenv
          - PIPENV_VENV_IN_PROJECT: true
          - DATABASE_URL: postgis://ubuntu@localhost/circle_test?sslmode=disable

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # User MUST be called `ubuntu`
      - image: mdillon/postgis:9.6
        environment:
          POSTGRES_USER: ubuntu
          PGUSER: ubuntu
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD:

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Fix file ownership and create log and staticfiles folders
          command: |
            sudo chown -R circleci:circleci /usr/local/bin
            sudo chown -R circleci:circleci /usr/local/lib/python2.7/site-packages
            mkdir -p logs staticfiles media/reports media/documents media/projects
            touch logs/sdis.log


      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install system packages for GDAL, Pandoc
          command: sudo apt-get update && sudo apt-get install -qq binutils libproj-dev gdal-bin libxml2-dev libxslt1-dev libsasl2-dev libenchant1c2a pandoc libsasl2-dev python-dev libssl-dev


      - run:
          name: Install Python module dependencies
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            coverage run --source="." manage.py test --settings=sdis.test_settings && coverage report -m

      - store_artifacts:
          path: test-reports
          destination: test-reports
